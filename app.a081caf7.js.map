{"version":3,"sources":["webpack:///./src/pic-ratio-fill/picRatioFill/imgCalc.js","webpack:///./src/pic-ratio-fill/picRatioFill/ColorPicker.js","webpack:///./src/pic-ratio-fill/picRatioFill/PicRatioFill.js","webpack:///./src/pic-ratio-fill/index.js","webpack:///./src/index.js"],"names":["calcImage","img","containerWidth","containerHeight","a","imageWidth","naturalWidth","imageHeight","naturalHeight","willFitWidth","calcWillFitWidth","getMaxColor","colorRgb","colorRgbOpposite","imageTarget","doOpposite","Promise","resolve","reject","crossOrigin","canvasTwo","document","createElement","width","height","top","left","getContext","drawImage","newImg","toDataURL","objImg","src","colorThief","ColorThief","calcColors","color","getColor","pallet","getPalette","main","complete","addEventListener","ColorPicker","activeColor","onColorChange","onClose","colors","rgbToHex","forEach","hexColor","indexOf","push","style","float","marginTop","marginRight","cursor","onClick","r","g","b","onChangeComplete","rgb","presetColors","componentToHex","c","hex","toString","length","rgbArray","PicRatioFill","onChangeColors","classes","useStyle","useState","selectedFill","setSelectedFill","colorCalc","setColorCalc","colorRgbValue","colorRgbOppositeValue","className","editContainer","imageContainerWidthFit","imageContainerHeightFit","picBorderWidth","picBorderHeight","backgroundColor","fitWidth","fitHeight","onLoad","event","target","then","result","console","log","pickerContainer","newColor","newCalc","makeStyles","props","zIndex","overflow","display","marginLeft","position","transform","PicRatioExample","onChange","results","margin","marginBottom","render","querySelector"],"mappings":"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","file":"app.a081caf7.js","sourcesContent":["import ColorThief from \"colorthief\";\n\nexport const calcImage = async (img, containerWidth, containerHeight) => {\n    const imageWidth = img.naturalWidth;\n    const imageHeight = img.naturalHeight;\n    const willFitWidth = calcWillFitWidth(containerWidth, containerHeight,\n        imageWidth, imageHeight);\n\n    const colorRgb = await getMaxColor(img, willFitWidth);\n    const colorRgbOpposite = await getMaxColor(img, willFitWidth, true);\n\n    return {willFitWidth, colorRgb, colorRgbOpposite};\n};\n\nexport const calcWillFitWidth = (containerWidth, containerHeight, imageWidth, imageHeight) => {\n    return (containerWidth / imageWidth) <= (containerHeight / imageHeight);\n};\n\nexport const getMaxColor = (imageTarget, willFitWidth, doOpposite = false) => {\n    return new Promise((resolve, reject) => {\n        const sliverSize = 15;\n        const img = imageTarget;\n        img.crossOrigin = \"Anonymous\";\n        const canvasTwo = document.createElement('canvas');\n        canvasTwo.width = willFitWidth ? img.naturalWidth : sliverSize;\n        canvasTwo.height = willFitWidth ? sliverSize : img.naturalHeight;\n\n        //fitWidth and is Opposite (bottom)\n        let top = img.naturalHeight - sliverSize;\n        let left = 0;\n        //fit Height and is Opposite\n        if(!willFitWidth && doOpposite) {\n            top = 0;\n            left = img.naturalWidth - sliverSize;\n        } //fit width and not opposite\n        else if(!doOpposite) {\n            top = 0;\n            left = 0\n        }\n\n        canvasTwo.getContext('2d').drawImage(\n            img, left, top, canvasTwo.width, canvasTwo.height,\n            0, 0, canvasTwo.width, canvasTwo.height);\n\n        const newImg = canvasTwo.toDataURL();\n\n        //const fac = new FastAverageColor();\n        const objImg = document.createElement('img');\n        objImg.src = newImg;\n        const colorThief = new ColorThief();\n\n        const calcColors = () => {\n            const color = colorThief.getColor(objImg);\n            const pallet = colorThief.getPalette(objImg, 7);\n            resolve({color, pallet, main: color});\n        };\n\n        if(objImg.complete) {\n            calcColors();\n        } else {\n            objImg.addEventListener(\"load\", ()=> {\n                calcColors();\n            })\n        }\n    });\n};\n","import React, {Fragment} from 'react'\nimport { SketchPicker } from 'react-color'\n\nexport const ColorPicker = ({activeColor, main, pallet, onColorChange, onClose}) => {\n\n    const colors = [rgbToHex(main)];\n    pallet.forEach((color) => {\n        const hexColor = rgbToHex(color);\n        if(colors.indexOf(hexColor)=== -1)\n            colors.push(hexColor)\n    });\n\n    return (\n        <Fragment>\n            {onClose &&\n            <span style={{float:\"right\", marginTop: -20, marginRight: 5, cursor: \"pointer\"}}\n\n               onClick={()=> onClose()}>Close</span>}\n        <SketchPicker\n            color={{r: activeColor[0], g: activeColor[1], b: activeColor[2]}}\n            onChangeComplete={(color) => {\n                onColorChange([color.rgb.r, color.rgb.g, color.rgb.b]);\n            }}\n            presetColors ={colors}\n        />\n        </Fragment>\n    );\n};\n\nfunction componentToHex(c) {\n    const hex = c.toString(16);\n    return hex.length === 1 ? \"0\" + hex : hex;\n}\n\nfunction rgbToHex(rgbArray) {\n    return `#${componentToHex(rgbArray[0])}${componentToHex(rgbArray[1])}${componentToHex(rgbArray[2])}`;\n}","import React, {useState} from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {calcImage} from \"./imgCalc\";\nimport {ColorPicker} from \"./ColorPicker\";\n\nexport const PicRatioFill = ({src, width, height, style, onChangeColors}) => {\n\n    const classes = useStyle({\n        containerWidth: width,\n        containerHeight: height\n    });\n    const [selectedFill, setSelectedFill] = useState(0);\n\n    const [colorCalc, setColorCalc] = useState({\n        willFitWidth: true,\n        colorRgb: {color:[0,0,0], pallet: [], main: [0,0,0]},\n        colorRgbOpposite:{color:[0,0,0], pallet: [], main: [0,0,0]}\n    });\n    const {willFitWidth, colorRgb, colorRgbOpposite} = colorCalc;\n\n    const colorRgbValue = `rgb(${colorRgb.color[0]},${colorRgb.color[1]}, ${colorRgb.color[2]})`;\n    const colorRgbOppositeValue = `rgb(${colorRgbOpposite.color[0]},${colorRgbOpposite.color[1]}, ${colorRgbOpposite.color[2]})`;\n\n    return (\n        <div className={classes.editContainer}>\n        <div\n            style={style}\n            className={willFitWidth ?\n                classes.imageContainerWidthFit :\n                classes.imageContainerHeightFit\n                }\n        >\n            <div\n                className={willFitWidth ? classes.picBorderWidth : classes.picBorderHeight}\n                style={{backgroundColor: colorRgbValue}}\n                onClick={() => setSelectedFill(1)}\n            />\n\n            <div\n                className={willFitWidth ? classes.fitWidth : classes.fitHeight}\n            >\n            <img\n                src={src}\n                className={willFitWidth ? classes.fitWidth : classes.fitHeight}\n                onLoad={(event) => {\n                    calcImage(event.target, width, height).then(\n                        (result) => {\n                            console.log(result);\n                            setColorCalc(result);\n                            if(onChangeColors)\n                                onChangeColors({\n                                    colorRgb: result.colorRgb.color,\n                                    colorRgbOpposite: result.colorRgbOpposite.color,\n                                    willFitWidth: result.willFitWidth\n                                })\n                        }\n                    );\n                }}\n            />\n            </div>\n\n            <div\n                className={willFitWidth ? classes.picBorderWidth : classes.picBorderHeight}\n                style={{backgroundColor: colorRgbOppositeValue}}\n                onClick={() => setSelectedFill(2)}\n            />\n        </div>\n            {selectedFill === 1 &&\n            <div className={classes.pickerContainer}>\n                <ColorPicker\n                    activeColor={colorRgb.color}\n                    main={colorRgb.main}\n                    pallet={colorRgb.pallet}\n                    onColorChange={(color) => {\n                        const newColor = {...colorRgb, color};\n                        const newCalc = {...colorCalc};\n                        newCalc.colorRgb = newColor;\n                        setColorCalc(newCalc);\n                        if(onChangeColors)\n                            onChangeColors({\n                                colorRgb: newCalc.colorRgb.color,\n                                colorRgbOpposite: newCalc.colorRgbOpposite.color,\n                                willFitWidth: newCalc.willFitWidth\n                            })\n                    }}\n                    onClose={()=> setSelectedFill(0)}\n                />\n            </div>\n            }\n            {selectedFill === 2 &&\n            <div className={classes.pickerContainer}>\n                <ColorPicker\n                    activeColor={colorRgbOpposite.color}\n                    main={colorRgbOpposite.main}\n                    pallet={colorRgbOpposite.pallet}\n                    onColorChange={(color) => {\n                        const newColor = {...colorRgbOpposite, color};\n                        const newCalc = {...colorCalc};\n                        newCalc.colorRgbOpposite = newColor;\n                        setColorCalc(newCalc);\n                        if(onChangeColors)\n                            onChangeColors({\n                                colorRgb: newCalc.colorRgb.color,\n                                colorRgbOpposite: newCalc.colorRgbOpposite.color,\n                                willFitWidth: newCalc.willFitWidth\n                            })\n                    }}\n                    onClose={()=> setSelectedFill(0)}\n                />\n            </div>\n            }\n        </div>\n    )\n};\n\nconst useStyle = makeStyles({\n    picBorderHeight: {\n        width: \"50%\",\n        height: props => props.containerHeight,\n        zIndex: 1,\n        cursor: \"pointer\"\n    },\n    picBorderWidth: {\n        width: \"100%\",\n        height: \"50%\",\n        zIndex: 1,\n        cursor: \"pointer\"\n    },\n    imageContainerHeightFit : {\n        width: props => props.containerWidth,\n        height: props => props.containerHeight,\n        overflow: \"hidden\",\n        backgroundColor: \"#afcdee\",\n        display:\"flex\"\n    },\n    imageContainerWidthFit : {\n        width: props => props.containerWidth,\n        height: props => props.containerHeight,\n        overflow: \"hidden\",\n        backgroundColor: \"#afcdee\"\n    },\n    fitHeight: {\n        height: \"100%\",\n        marginLeft: \"auto\",\n        marginRight: \"auto\",\n        position: \"relative\",\n        zIndex: 2\n    },\n    fitWidth: {\n        width: \"inherit\",\n        position: \"absolute\",\n        transform: \"translateY(-50%)\",\n        zIndex: 2\n    },\n    editContainer: {\n        display: \"flex\"\n    },\n    pickerContainer: {\n        marginLeft: 30\n    }\n});","import React from \"react\";\nimport {PicRatioFill} from \"./picRatioFill/PicRatioFill\";\n\nexport const PicRatioExample = ()=> {\n    const onChange = (results) => console.log(results);\n    return (\n        <div style={{margin: 30}}>\n            <h1>Pic Ratio Fill</h1>\n            <p>Example : Fit to width</p>\n            <PicRatioFill\n                src=\"sample.jpg\"\n                width={330}\n                height={260}\n                style={{marginBottom: 20}}\n                onChangeColors={onChange}\n            />\n            <p>Example : Fit to Height</p>\n            <PicRatioFill\n                src=\"sample2.jpg\"\n                width={330}\n                height={260}\n                onChangeColors={onChange}\n            />\n\n        </div>\n    )\n};","import './index.css'\nimport React from 'react'\nimport {render} from 'react-dom'\nimport {PicRatioExample} from \"./pic-ratio-fill\";\n\nrender(<PicRatioExample />, document.querySelector('#app'));\n\n"],"sourceRoot":""}